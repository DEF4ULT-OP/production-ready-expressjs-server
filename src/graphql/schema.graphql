type Query {
    users(query: String): [User!]!
    me: User!
}

type Mutation {
    createUser(data: CreateUserInput!): User!
    deleteUser(id: ID!): User!
    updateUser(id: ID!, data: UpdateUserInput!): User!
}

input CreateUserInput {
    name: String!
    email: String!
    location: String!
    age: Int!
}

input UpdateUserInput {
    name: String
    email: String
    location: String
    age: Int
}

type User {
    id: ID!
    name: String!
    email: String!
    location: String!
    age: Int!
}

type Subscription {
    user(userId: ID!): UserSubscriptionPayload!
}

enum MutationType {
    CREATED
    UPDATED
    DELETED
}

type UserSubscriptionPayload {
    mutation: MutationType!
    node: User!
}
